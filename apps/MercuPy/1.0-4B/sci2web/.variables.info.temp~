Show#Format:
#  VariableName::DefaultValue::TypeOfVariable::CompleteName::Tab::Group::HelpText::ReadOnly
#
#Where:
#
#  VariableName: Name of variable
#
#  DefaultValue: Single value 'min<<max==value', selection value
#  'val1,val2,...==def.val', scrollable value
#  'min--max--delta==def.val.'
#
#  TypeOfVariable: Available types: int, float, varchar, char, file,
#  boolean, text
#
#  CompleteName: Complete name used for prompt the value.
#
#  Tab: Tab name.
#
#  Group: Group in the tab.
#
#  HelpText: Help text for the variable.
#
#  ReadOnly: Use 'readonly' if the value cannot be input.
#################################################################################
#TAB: SIMULATION
#################################################################################
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: CUSTOM UNITS
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[CustomUL::1.0*AU::varchar::Custom Longitud Units::Simulation::Custom Units::Units of longitude in MKS.  Available Macros RSUN, AU::NoDB]]
[[CustomUM::1.0*MSUN::varchar::Custom Mass Units::Simulation::Custom Units::Units of mass in MKS.  Available Macros MMOON, MEARTH, MSUN, MJUP::NoDBNoDB]]

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: TIMES
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[TimeUnits::hours;;days;;months;;years==days::varchar::Time Units::Simulation::Times::Enter the units for times in simulation]]
[[Epoch::0.0::float::Epoch::Simulation::Times::Enter the initial epoch of the simulation]]
[[TimeStart::0.0::float::Time of start::Simulation::Times::In Time Units::NoDB]]
[[TimeElapsed::18.0::float::Simulation time::Simulation::Times::In Time Units::NoDB]]
[[TimeStep::0<<==1E-3::float::Time step::Simulation::Times::In Time Units::NoDB]]

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: INPUT/OUTPUT
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[DtOutput::0<<==0.1::float::Time between internal output::Simulation::Input/Output::Enter the time between internal output in Time Units]]
[[DtOutputElements::0<<==1.0::float::Time between element output::Simulation::Input/Output::Enter the time between output of elements in the results files in Time Units::NoDB]]
[[DtDataDumps::0<<==1.0::float::Time between dumps::Simulation::Input/Output::Enter the time between the storing of data dumps::NoDB]]
[[CentralReference::Central;;Barycentric;;Jacobi==Central::varchar::Type of elements::Simulation::Input/Output::Type of elements]]
[[TimeRelativeIntegration::yes;;no==yes::varchar::Time origin::Simulation::Input/Output::Express time relative to integration start time]]

#################################################################################
#TAB: BODIES
#################################################################################
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: GENERAL
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[SystemDescription::This is a n-body system::text::System description::Bodies::General::Give a complete description of the simulation]]
[[CoordinatesCentral::Cartesian;;Asteroidal;;Cometary==Cartesian::varchar::Coordinates for the Central Object::Bodies::General::System of coordinates for the central object::NoDB]]
[[CoordinatesBig::Cartesian;;Asteroidal;;Cometary==Asteroidal::varchar::Coordinates for Big Object::Bodies::General::System of coordinates for small objects::NoDB]]
[[CoordinatesSmall::Cartesian;;Asteroidal;;Cometary==Asteroidal::varchar::Coordinates for Small Object::Bodies::General::System of coordinates for small objects::NoDB]]

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: CENTRAL BODY
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[Body1Name::Sun::varchar::Name::Bodies::Body 1::Name of the body::NoDB]]
[[Body1Mass::1.0*MSUN::varchar::Mass::Bodies::Body 1::Mass in kg.  You can use the following macros MSUN, MEARTH, MMOON, MJUP]]
[[Body1Class::CUSTOMOBJECT;;ROCKYPLSIMAL;;ICEPLSIMAL;;NORMALSTAR;;WDSTAR;;NEUTRONSTAR;;GASGIANT;;ICEGIANT;;SOLIDROCKY;;SOLIDIRON;;SOLIDICE==NORMALSTAR::varchar::Class::Bodies::Body 1::Physical class of the body]]
[[Body1Density::0.0<<==0.0::float::Density::Bodies::Body 1::Density of the body in g/cc (only if the CUSTOMOBJECT class is selected)]]
[[Body1Radius::0.0<<==0.0::float::Radius::Bodies::Body 1::Radius of the body in AU (only if the CUSTOMOBJECT class is selected)]]
[[Body1Units::ORBITAL;;CUSTOM;;MERCURY;;BODY;;GRAVITATIONAL==MERCURY::varchar::Units::Bodies::Body 1::Units for the state of the body:ORBITAL(km,kg,s),MERCURY(MSun,AU,s),BODY(Ms,Rs,s,km/s),GRAVITATIONAL(Ms,RH,s,km/s)]]
[[Body1State::0.0 0.0 0.0 0.0 0.0 0.0::varchar::Initial state::Bodies::Body 1::Initial state of the body: x,y,z,vx,vy,vz or a,e,i,n,g,M or q,e,i,g,n,T]]
[[Body1J2::0.0<<==0.0::float::J2::Bodies::Body 1::J2]]
[[Body1J4::0.0<<==0.0::float::J4::Bodies::Body 1::J4]]
[[Body1J6::0.0<<==0.0::float::J6::Bodies::Body 1::J6]]

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: BODY 2
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[Body2Type::BIG;;SMALL==BIG::varchar::Type of object::Bodies::Body 2::Type of object: BIG (produces and fells gravitational field), SMALL (only feels gravitational field)]]
[[Body2Name::Earth::varchar::Name::Bodies::Body 2::Name of the body::NoDB]]
[[Body2Mass::1.0*MEARTH::varchar::Mass::Bodies::Body 2::Mass in kg.  You can use the following macros MSUN, MEARTH, MMOON, MJUP]]
[[Body2Class::CUSTOMOBJECT;;ROCKYPLSIMAL;;ICEPLSIMAL;;NORMALSTAR;;WDSTAR;;NEUTRONSTAR;;GASGIANT;;ICEGIANT;;SOLIDROCKY;;SOLIDIRON;;SOLIDICE==SOLIDROCKY::varchar::Class::Bodies::Body 2::Physical class of the body]]
[[Body2Density::0.0<<==0.0::float::Density::Bodies::Body 2::Density of the body in g/cc (only if the CUSTOMOBJECT class is selected)]]
[[Body2Radius::0.0<<==0.0::float::Radius::Bodies::Body 2::Radius of the body in AU (only if the CUSTOMOBJECT class is selected)]]
[[Body2Reference::BODY1;;BODY3==BODY1::varchar::Reference frame::Bodies::Body 2::Indicates the body with respect to the state of this body is given]]
[[Body2Units::ORBITAL;;CUSTOM;;MERCURY;;BODY;;GRAVITATIONAL==MERCURY::varchar::Units::Bodies::Body 2::Units for the state of the body:ORBITAL(km,kg,s),MERCURY(MSun,AU,s),BODY(Ms,Rs,s,km/s),GRAVITATIONAL(Ms,RH,s,km/s)]]
[[Body2State::1.0 0.0167 0.0 0.0 0.0 0.0::varchar::Initial state::Bodies::Body 2::Initial state of the body:x,y,z,vx,vy,vz or a,e,i,n,g,M or q,e,i,g,n,T]]
[[Body2StateFile::BODY2.state::file::State file::Bodies::Body 2::File with the initial state of the body::NoDB]]
[[Body2As::a1=0.0 a2=0.0 a3=0.0::varchar::Non-gravitational acceleration::Bodies::Body 2::Non-gravitational acceleration parameters]]
[[Body2Spin::0.0 0.0 0.0::varchar::Spin angular momentum::Bodies::Body 2::Components of the apin angular momentum]]
[[Body2Close::0<<==1E-4::float::Close encounter distance::Bodies::Body 2::Monimum distance for a close encounter in Hill-Radius]]
[[Body2Show::1::boolean::Show object::Bodies::Body 2::Show object::NoDB]]

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: BODY 3
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[Body3Type::BIG;;SMALL==BIG::varchar::Type of object::Bodies::Body 3::Type of object: BIG (produces and fells gravitational field), SMALL (only feels gravitational field)]]
[[Body3Name::Jupiter::varchar::Name::Bodies::Body 3::Name of the body::NoDB]]
[[Body3Mass::1.0*MJUP::varchar::Mass::Bodies::Body 3::Mass in kg.  You can use the following macros MSUN, MEARTH, MMOON, MJUP]]
[[Body3Class::CUSTOMOBJECT;;ROCKYPLSIMAL;;ICEPLSIMAL;;NORMALSTAR;;WDSTAR;;NEUTRONSTAR;;GASGIANT;;ICEGIANT;;SOLIDROCKY;;SOLIDIRON;;SOLIDICE==GASGIANT::varchar::Class::Bodies::Body 3::Physical class of the body]]
[[Body3Density::0.0<<==0.0::float::Density::Bodies::Body 3::Density of the body in g/cc (only if the CUSTOMOBJECT class is selected)]]
[[Body3Radius::0.0<<==0.0::float::Radius::Bodies::Body 3::Radius of the body in AU (only if the CUSTOMOBJECT class is selected)]]
[[Body3Reference::BODY1;;BODY2==BODY1::varchar::Reference frame::Bodies::Body 3::Indicates the body with respect to the state of this body is given]]
[[Body3Units::ORBITAL;;CUSTOM;;MERCURY;;BODY;;GRAVITATIONAL==MERCURY::varchar::Units::Bodies::Body 3::Units for the state of the body:ORBITAL(km,kg,s),MERCURY(MSun,AU,s),BODY(Ms,Rs,s,km/s),GRAVITATIONAL(Ms,RH,s,km/s)]]
[[Body3State::5.2 0.0 0.0 0.0 0.0 0.0::varchar::Initial state::Bodies::Body 3::Initial state of the body:x,y,z,vx,vy,vz or a,e,i,n,g,M or q,e,i,g,n,T]]
[[Body3StateFile::BODY3.state::file::State file::Bodies::Body 3::File with the initial state of the body::NoDB]]
[[Body3As::a1=0.0 a2=0.0 a3=0.0::varchar::Non-gravitational acceleration::Bodies::Body 3::Non-gravitational acceleration parameters]]
[[Body3Spin::0.0 0.0 0.0::varchar::Spin angular momentum::Bodies::Body 3::Components of the apin angular momentum]]
[[Body3Close::0<<==1E-4::float::Close encounter distance::Bodies::Body 3::Monimum distance for a close encounter in Hill-Radius]]
[[Body3Show::1::boolean::Show object::Bodies::Body 3::Show object::NoDB]]

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: BODY 4
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[Body4Type::BIG;;SMALL==BIG::varchar::Type of object::Bodies::Body 4::Type of object: BIG (produces and fells gravitational field), SMALL (only feels gravitational field)]]
[[Body4Name::Moon::varchar::Name::Bodies::Body 4::Name of the body::NoDB]]
[[Body4Mass::1.0*MMOON::varchar::Mass::Bodies::Body 4::Mass in kg.  You can use the following macros MSUN, MEARTH, MMOON, MJUP]]
[[Body4Class::CUSTOMOBJECT;;ROCKYPLSIMAL;;ICEPLSIMAL;;NORMALSTAR;;WDSTAR;;NEUTRONSTAR;;GASGIANT;;ICEGIANT;;SOLIDROCKY;;SOLIDIRON;;SOLIDICE==SOLIDROCKY::varchar::Class::Bodies::Body 4::Physical class of the body]]
[[Body4Density::0.0<<==0.0::float::Density::Bodies::Body 4::Density of the body in g/cc (only if the CUSTOMOBJECT class is selected)]]
[[Body4Radius::0.0<<==0.0::float::Radius::Bodies::Body 4::Radius of the body in AU (only if the CUSTOMOBJECT class is selected)]]
[[Body4Reference::BODY1;;BODY2==BODY2::varchar::Reference frame::Bodies::Body 4::Indicates the body with respect to the state of this body is given]]
[[Body4Units::ORBITAL;;CUSTOM;;MERCURY;;BODY;;GRAVITATIONAL==ORBITAL::varchar::Units::Bodies::Body 4::Units for the state of the body:ORBITAL(km,kg,s),MERCURY(MSun,AU,s),BODY(Ms,Rs,s,km/s),GRAVITATIONAL(Ms,RH,s,km/s)]]
[[Body4State::3.84E5 0.0 5.0 0.0 0.0 0.0::varchar::Initial state::Bodies::Body 4::Initial state of the body:x,y,z,vx,vy,vz or a,e,i,n,g,M or q,e,i,g,n,T]]
[[Body4StateFile::BODY3.state::file::State file::Bodies::Body 4::File with the initial state of the body::NoDB]]
[[Body4As::a1=0.0 a2=0.0 a3=0.0::varchar::Non-gravitational acceleration::Bodies::Body 4::Non-gravitational acceleration parameters]]
[[Body4Spin::0.0 0.0 0.0::varchar::Spin angular momentum::Bodies::Body 4::Components of the apin angular momentum]]
[[Body4Close::0<<==1E-4::float::Close encounter distance::Bodies::Body 4::Monimum distance for a close encounter in Hill-Radius]]
[[Body4Show::1::boolean::Show object::Bodies::Body 4::Show object::NoDB]]

#################################################################################
#TAB: INTEGRATOR
#################################################################################
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: GENERAL
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[IntegrationAlgorithm::HYB;;MVS;;BS;;BS2;;RADAU==HYB::varchar::Integrator algorithm::Integrator::General::Integrator Algorithm]]
[[IntegrationAccuracy::0<<==1E-12::float::Integrator accuracy::Integrator::General::Accuracy of the integrator (adimensional)]]
[[IntegrationPrecision::low;;medium;;high==medium::varchar::Integrator precision::Integrator::General::Precision of the integrator: low (4), medium (9) and high (15 digits)]]
[[IntegrationChangeOver::0.0--10.0--0.1==3.0::float::Integrator changeover::Integrator::General::Distance for integrator algorithm changeover in Hill-Radius]]
[[DStepPeriodic::1<<==100::int::Number of timesteps between periodic effects::Integrator::General::Number of timesteps between periodic effects]]

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: BEHAVIOR
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[StopIntegration::yes;;no==no::varchar::Stop Integration?::Integrator::Behavior::Stop integration after a close encounter]]
[[Collisions::yes;;no==no::varchar::Allow collisions?::Integrator::Behavior::Allow collisions to occur]]
[[ContinueIntegration::1::boolean::Continue integration::Integrator::Behavior::Do you want that the integration continue in the last point?::NoDB]]
[[StorePreviousResults::1::boolean::Store previous results::Integrator::Behavior::Do you want to store previous results when continuing?::NoDB]]

#################################################################################
#TAB: PLOT
#################################################################################
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: REFERENCE FRAME
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[ReferenceRotate::0::boolean::Rotate to other reference system::Plot::Reference Frame::Select if you want to rotate to other reference system::NoDB]]
[[ReferenceBody::BODY1;;BODY2;;BODY3==BODY2::varchar::Reference body::Plot::Reference Frame::Choose the body respect to which the elements will be computed::NoDB]]
[[BodyAxis1::BODY1;;BODY2;;BODY3;;INERTIAL==BODY2::varchar::Reference axis point 1::Plot::Reference Frame::Choose the point 1 of the reference axis.  INERTIAL is a fixed point at (0,0,0)::NoDB]]
[[BodyAxis2::BODY1;;BODY2;;BODY3;;INERTIALX;;INERTIALY;;INERTIALZ==INERTIALX::varchar::Reference axis point 2::Plot::Reference Frame::Choose the point 1 of the reference axis.  INERTIAL* is a fixed point at one of the three axis::NoDB]]
[[ReferenceType::Rotating;;==Rotating::varchar::Type of reference system::Plot::Reference Frame::Type of reference system: Rotating or Pulsating::NoDB]]
[[BodiesToRotate::'BODY4'::varchar::Bodies to rotate::Plot::Reference Frame::Select the bodies to rotate. Apostrophe and commas are mandatory::NoDB]]

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: ELEMENTS
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[ElementsActivate::1::boolean::Activate plot::Plot::Elements::Activate this plot?::NoDB]]
[[ElementsBodies::'BODY2','BODY3','BODY4'::varchar::Bodies::Plot::Elements::Bodies whose elements will be plotted::NoDB]]
[[ElementsStyles::('b','-',3,'s',2),('r','-',3,'s',2),('g','-',3,'s',2)::varchar::Plot style::Plot::Elements::Format: (color,line style,line width,marker style,marker size).  Line styles: '-','--','-.',':'. Marker styles: 'o','s'::NoDB]]
[[ElementsCoordinates::'a','e','q','Q','i'::varchar::Elements::Plot::Elements::Elements: x,y,z,vx,vy,vz,s,o,d,m,a,e,i,g,n,M,r,q,Q,l,f (see manual)::NoDB]]
[[ElementsYLims::'Auto',(0,1),'Auto','Auto',(0,90)::varchar::Y limits::Plot::Elements::Limits for elements plots::NoDB]]
[[ElementsScales::'linear','log','linear','linear','linear'::varchar::Y scales::Plot::Elements::Scale for elements plots::NoDB]]
[[ElementsTimeIni::state.TIME_START::varchar::Initial time::Plot::Elements::It can be expressed in terms of state.TIME_START,state.TIME_STOP,state.TIME_STOP,state.DT_OUTPUT,state.DT_OUTPUTELEM::NoDB]]
[[ElementsTimeEnd::state.TIME_STOP::varchar::Final time::Plot::Elements::It can be expressed in terms of state.TIME_START,state.TIME_STOP,state.TIME_STOP,state.DT_OUTPUT,state.DT_OUTPUTELEM::NoDB]]

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: ORBIT
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[OrbitActivate::1::boolean::Activate plot::Plot::Orbit::Activate this plot?::NoDB]]
[[OrbitBodies::'BODY2','BODY3','BODY4'::varchar::Bodies::Plot::Orbit::Bodies whose orbit will be plotted::NoDB]]
[[OrbitStyles::('b','-',2,'o',5),('r','-',1,'p',5),('g','-',1,'p',5)::varchar::Plot style::Plot::Orbit::Format: (color,line style,line width,marker style,marker size).  Line styles: '-','--','-.',':'. Marker styles: 'o','s'::NoDB]]
[[OrbitCoordinates::'x','y','z'::varchar::Coordinates::Plot::Orbit::Elements: x,y,z,vx,vy,vz,s,o,d,m,a,e,i,g,n,M,r,q,Q,l,f (see manual)::NoDB]]
[[OrbitViewAngle::30,60::varchar::Viewing angle::Plot::Orbit::Angles: phi(horizontal angle), theta(polar angle) in degrees::NoDB]]
[[OrbitTimeIni::state.TIME_START::varchar::Initial time::Plot::Orbit::It can be expressed in terms of state.TIME_START,state.TIME_STOP,state.TIME_STOP,state.DT_OUTPUT,state.DT_OUTPUTELEM::NoDB]]
[[OrbitTimeEnd::state.TIME_STOP::varchar::Final time::Plot::Orbit::It can be expressed in terms of state.TIME_START,state.TIME_STOP,state.TIME_STOP,state.DT_OUTPUT,state.DT_OUTPUTELEM::NoDB]]
[[OrbitBox::0::boolean::Show 2D axis::Plot::Orbit::Show 2D axis::NoDB]]
[[OrbitGrid::0::boolean::Show 2D grid::Plot::Orbit::Show 2D grid (if the 2D axis are set)::NoDB]]
[[OrbitAxis::1::boolean::Show xyz-axis::Plot::Orbit::Show xyz-axis::NoDB]]
[[OrbitXYPlane::1::boolean::Show xy-plane::Plot::Orbit::Show xy-plane::NoDB]]
[[OrbitLegends::1::boolean::Show body legend::Plot::Orbit::Show body legend::NoDB]]
[[OrbitXLabel::'AU'::varchar::X label::Plot::Orbit::X-label (if the 2D axis are set)::NoDB]]
[[OrbitYLabel::'AU'::varchar::Y label::Plot::Orbit::Y-label (if the 2D axis are set)::NoDB]]

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GROUP: ERRORS
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[[ComputeClose::0::boolean::Compute close encounters::Plot::Errors::Compute the position of the bodies during the close encounters::NoDB]]
[[ComputeErrors::0::boolean::Compute errors::Plot::Errors::Check if you want to compute the errors between two integration phases::NoDB]]
[[BodyErrors::BODY2;;BODY3==BODY3::varchar::Body to compute errors::Plot::Errors::Errors for the orbit of this body will be computed::NoDB]]
[[BodyExtension::dat;;ref==dat::varchar::Source of data::Plot::Errors::'dat' contains the Mercury output data, 'ref' contains the change of reference frame results::NoDB]]
[[BodyPhase1::1::int::Phase 1::Plot::Errors::Phase to compare::NoDB]]
[[BodyPhase2::2::int::Phase 2::Plot::Errors::Phase to compare::NoDB]]
