.. .
   ////////////////////////////////////////////////////////////////////////
   //           _ ___               _					 //
   //          (_)__ \             | |					 //
   //  ___  ___ _   ) |_      _____| |					 //
   // / __|/ __| | / /\ \ /\ / / _ \ '_ \				 //
   // \__ \ (__| |/ /_ \ V  V /  __/ |_) |				 //
   // |___/\___|_|____| \_/\_/ \___|_.__/				 //
   // 		     	    						 //
   // Bringing naturally developed scientific applications to the web	 //
   // Jorge Zuluaga (2011)	   	      		      	  	 //
   ////////////////////////////////////////////////////////////////////////
   .
.. include:: util.txt

=======
Sci2Web
=======
---------------------------------------------------------------
Bringing naturally developed scientific applications to the web
---------------------------------------------------------------

Plaform Installation 
********************

:Author: Jorge Zuluaga
:Version: Revision 1, Wed Nov 30 06:29:15 COT 2011
:Copyright: This document has been placed in the public domain.

Presentation
~~~~~~~~~~~~

This is Sci2Web_.

Install Sci2Web in a new server
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The Sci2Web_ platform will be installed as a website in your server.
You will need to have installed in your server the following
dependences before trying to configure and use the platform:

- Apache2 server (debian package, dp:``apache2``)

- PHP and PHP+MySQL modules (dp: ``php5`` , ``php5-mysql`` )

- Perl language

- DBI and DBD-MySQL perl modules (dp: ``libdbi-perl`` , ``libdbd-mysql-perl``)

- Python language

- Matplotlib library (dp: ``python-matplotlib``)

- Delayed job execution and batch processing package, ``at`` (dp:
  ``at``)

For debian users (e.g. ubuntu) use the following command to install
all the packages in your server::

    apt-get install --yes --force-yes apache2 php5 php5-mysql perl python libdbi-perl libdbd-mysql-perl python-matplotlib

To start using the Sci2Web_ platform in your server follow the
procedure outlined below.

.. Important:: Hereafter we will use the follwoing aliases when
   referring to important directories and files:
   
   - **PROJPATH**: directory where the Sci2Web_ site is placed at the
     server (e.g. /var/www/html/Sci2Web).

   - **APACHE_USER** and **APACHE_GROUP**.  User and group of the
     apache2 server.  Typically they are ``www-data`` and ``www-data``.

#. **Edit the master configuration file**.  You can set up the basic
   information about your server in the master configuration file
   ``PROJPATH/lib/sci2web.conf``.  The most important variables in
   this file are:

   + **PROJBASE** and **PROJNAME**: The URL of your project will be
     recognized as: ``http://server/PROJBASE/PROJNAME``.  Configure
     properly these variables in order to have right links in your
     website.

   + **SCI2WEBSITE**: This is the name of the *local server* where the
     Sci2Web_ platform is installed.  This name will be used in
     different places of the platform to distinguish this instance of
     Sci2Web from other ones found around the web.  Here you can use
     the name of your institution, research group and even your
     personal name.

   + **ENTRYPAGE**: The entry page is the page the site displays when
     the above URL is enetered.  By default it is ``test.php``.  You
     can change it according to your own interests.  Some useful entry pages are:
     
     * ``main.php`` , main page of the platform.

     * ``main.php?TabId=3`` , main page open in the fourth tab
       (i.e. the tab where the list of applications are displayed).

     * ``app.php?SetApp=true&App=Diffusion&VersionId=1&TabId=1`` ,
       open the page of version 'dev' (version id 1) of application
       'Diffusion' at the first tab (i.e. description of application)

   .. Important: If you change the information about the database
      (name of the database or the authorized user, password of the
      user) you must also edit that information in the
      ``bin/sci2web.pm`` file.

#. **Set permissions for critical directories**.  Several directories
   in your website should have writing permission for the apache
   user::

   	  $ chown -R APACHE_USER.APACHE_GROUP runs tmp
   	  $ chown -R APACHE_USER.APACHE_GROUP apps/*/*.html
   	  $ chown -R APACHE_USER.APACHE_GROUP pages/*/content/*.html
   	  $ chown -R APACHE_USER.APACHE_GROUP js/ckfinder/userfiles

   You can use the script ``PROJPATH/doc/install/setperms.sh`` to
   change automatically permissions.

#. **Set up the database server**.  Sci2Web_ site uses systematically
   mysql databases to store information about applications, users,
   runs, etc.  In order to use the platform it is important to set up
   properly the mysql server to accept the creation and modification
   of the platform databases.  Before to start you have to create a
   user with the proper permissions to create and modify the Sci2Web_
   database.  Login into the mysql server as ``root`` and execute::

   	 mysql> create user 'sci2web'@'localhost' identified by 'WebPoweredNDSA';

   The information about the user (login and password) should be the
   same as that stored in the master configuration file.

#. **Create Sci2Web database and populate it with basic
   information**.  You will find the proper sql commands to create and
   populate the Sci2Web_ database at ``doc/install``.  To perform this
   actions just run::

         $ mysql -u root -p < doc/install/sci2web.sql
 
#. **Test the configuration**.  In order to test the configuration of
   the site open the page
   ``http://SERVERURL/PROJBASE/PROJNAME/test.php``.  This php script
   test the access to the database and several key files and
   directories.  If an error is raised at this point check your
   configuration and reload the test script.

#. Once the test script has ran successfully check directly the
   website by going to ``http://SERVERURL/PROJBASE/PROJNAME``.

Security issues
~~~~~~~~~~~~~~~

Security is an important concern when working in the web.  In order to
use Sci2Web_ you should be sure that several aspects of the server
configuration has been ste up on one hand to allow the use of the
computational power available in your server and on the other hand to
avoid attacks to your server coming form the Sci2Web_ website.

+ **Apache2 configuration**.  To avoid the access to critical files
  and directories in the website you should configure Apache2 to deny
  the listing of directories where an index file is not present.  To
  perform this allows the overriding of the apache options at the
  ``.htaccess`` files adding to your /etc/apache2/apache2.conf file
  the following section::

	   <Directory "PROJPATH">
	   AllowOverride All
	   </Directory>

+ **Allow the use of the batch processing package**.  Sci2Web_ uses by
  default the ``at`` delayed job execution and batch processing
  package in order to submit and run the applications launched from
  the website.  By default the ``at`` command is disabled for the
  APACHEUSER.  Grant permissions to the APACHEUSER to the at queue by
  commenting the username at the ``/etc/at.deny`` file.  

  You can configure here another batch processing packages and job
  scheduler software.  To configure Sci2Web_ to use other submission
  systems please see the developer guide.

+ **Set up bash as the default shell used to executed the jobs at the
  processing package**.  Sci2Web_ uses bash as the default language
  for the submission scripts.  Several schedulers, including ``at``
  uses by default ``dash`` as the default scripting language.
  Normally this is performed by creating a symbolic link to
  ``/bin/dash`` as ``/bin/sh``.  Change this default configuration in
  order to make ``sh`` point out to ``bash``.

