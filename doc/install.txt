.. .
   ////////////////////////////////////////////////////////////////////////
   //           _ ___               _					 //
   //          (_)__ \             | |					 //
   //  ___  ___ _   ) |_      _____| |					 //
   // / __|/ __| | / /\ \ /\ / / _ \ '_ \				 //
   // \__ \ (__| |/ /_ \ V  V /  __/ |_) |				 //
   // |___/\___|_|____| \_/\_/ \___|_.__/				 //
   // 		     	    						 //
   // Bringing naturally developed scientific applications to the web	 //
   // Jorge Zuluaga (2011)	   	      		      	  	 //
   ////////////////////////////////////////////////////////////////////////
   .
.. include:: util.ixt

.. image:: ../images/sci2web-mainlogo.jpg 
   :height: 100px

Installation of the Server Site
*******************************

:Author: Jorge Zuluaga
:Version: Revision 1, Wed Nov 30 06:29:15 COT 2011
:Copyright: This document has been placed in the public domain.

.. contents:: Table of Contents
   :backlinks: entry

Abstract
~~~~~~~~

This document explains how to install Sci2Web_ in a web server.  The
installation of Sci2web_ is a rather simple process as compared with
the installation of similar web tools.  It requires administrative
permissions in your web server.  If you have already succesfully
installed the tool in your web server and want to familiarize with the
example application read the `user guide <user.html>`_.  If you are
prepared to port a new scientific application to your server site read
instead the `developer guide <developer.html>`_.

Presenting Sci2Web_
~~~~~~~~~~~~~~~~~~~

.. include:: presentation.ixt

Before to start
~~~~~~~~~~~~~~~

Before to proceed with the installation of Sci2Web_ check that the
following dependencies are installed in your web server:

- Apache2 server (debian package, dp:``apache2``)

- PHP and PHP+MySQL modules (dp: ``php5`` , ``php5-mysql`` )

- Perl language

- DBI and DBD-MySQL perl modules (dp: ``libdbi-perl`` , ``libdbd-mysql-perl``)

- Python language

- Matplotlib library (dp: ``python-matplotlib``)

- Delayed job execution and batch processing package, ``at`` (dp:
  ``at``)

- The GNU Fortran 95 compiler (dp:``gfortran``)

- The GNU C++ compiler (dp: ``g++``)

The last two packages are required to compile and run the sample
application coming with the Sci2Web_ server site.

Ubuntu users, and in general Debian administrators, could find useful
the following command to install all the required packages in your
server::

    % sudo apt-get install --yes --force-yes apache2 php5 php5-mysql perl python libdbi-perl libdbd-mysql-perl python-matplotlib gfortran g++

Here the symbol ``%`` replaces the prompt and hereafter will be used
to denote a command that should be executed in the linux console.

.. Important:: Hereafter we will use also the follwoing aliases when
   referring to important directories, files or other global
   properties that could change from machine to machine:
   
   - **PROJPATH**: directory where the Sci2Web_ site is placed at the
     server (e.g. /var/www/html/Sci2Web).

   - **APACHE_USER** and **APACHE_GROUP**.  User and group of the
     apache2 server.  Typically they are ``www-data`` and ``www-data``.

   The following terms will be also frequently used in this and other
   documents:

   - **Sci2Web Server Site**.  This is a server where Sci2Web_ is
     installed and serving Scientific Application.  It is different
     from the **Sci2Web Home Site** which is the home site of the
     tool.

   - **Ported Application**.  This is an application that has been
     installed in a Sci2Web_ server site.

Installation
~~~~~~~~~~~~

To install a Sci2Web_ server site in your server follow these steps:

#. **Get a copy of the software**.  The software can be download
   directly from github `<https://github.com/facom/Sci2Web>`_.  If you
   also want to obtain fresh updates of the tool directly in your
   local copy you can instead obtain an anonymous clone of the
   project::

   % git clone git://github.com/facom/Sci2Web.git

   In this case ``git`` must be installed in the server.  Every time
   you want to update your copy just execute::

   % git pull

.. Important:: The update procedure performed with the ``git pull``
   command will not overwrite either the local configuration of your
   server site nor any of the files created after the installation.

#. **Configure the site**.  All the Sci2Web_ server sites installed
   around the globe are by default identical and assume default values
   for several key parameters.  In order to customize you server site
   you need to create and properly edit the configuration files
   ``PROJPATH/lib/sci2web.conf`` and ``PROJPATH/lib/sci2web.db``.  A
   generic template could be obtained from the
   ``PROJPATH/doc/install`` directory::

   % cp doc/install/sci2web.{conf,db} lib/

   Edit the files setting up the parameters specific to your server
   site.  Among the parameters that you could set up in this files
   are:

   + **PROJBASE** and **PROJNAME**: The URL of your project will be
     recognized as: ``http://server/PROJBASE/PROJNAME``.  Configure
     properly these variables in order to have right links in your
     website.

   + **SCI2WEBSITE**: This is the name of the *local server site*
     where the Sci2Web_ is installed.  This name will be used in
     different places of the site to distinguish it from other server
     sites found around the web.  You can use the name of your
     institution, research group or even your personal name.

   + **ENTRYPAGE**: The entry page is the webpage displayed by default
     when the base URL is used. Some useful entry pages are:
     
     * ``main.php``, main page of the site.

     * ``main.php?TabId=4``, open main page in the fourth tab
       (i.e. the tab where the list of applications are displayed).

     * ``app.php?SetApp=true&App=MercuPy&VersionNum=0&VersionId_0=2B-dev``,
       open the page of the sample application.

   + **WEBMASTER**: E-mail of the person working as the web master of
     the server site.  Please sign up for an account with the e-mail
     you set here as soon as you have installed your server site.  The
     user registered with this e-mail will have *administrative*
     permissions on the site including rights to edit the main page
     contents and to manipulate all the web pages of the served
     applications.

   + **MAINLOGO**: Name of the image containing the logo appearing in
     the header of the server site webpage.  By default all the server
     sites use the Sci2Web_ main logo.  The main logo should be placed
     at the ``images`` directory.  We recommend to use a main logo
     including the image of your institution or group and include a
     small version of the the Sci2Web_ logo.  An example logo
     ``testserver-mainlogo.jpg`` is provided.  You can edit your logo
     using the *Open Office Draw* file ``images/sci2web-design.odg``.

   + **DBNAME**, **DBSERVER**, **DBUSER**, **DBPASS**: Properties of
     the database.  Change only if you actually know what are you
     doing.  This properties are used frequently in other components
     of the site and it is recommended *not to change them*.  However
     for security issues it is important to set up a different
     password for the database user.  In this case be sure that you
     use the same password in the rest of this procedure.

   + **MAINTABS**: You can customize the server site main page by
     choosing which tabs and in which order they will be rendered.
     The ``MAINTABS`` configuration variable controls this property.
     There are four available tabs: ``presentation``,
     ``documentation``, ``instituion`` and ``applications``.  The
     content of the first three are fully editable by the *Web Master*
     (sci2web@gmail.com)

   + **ENABLEMAIL**: enable the sending of e-mail from the website.
     Several features of the website use e-mail to notify the users
     about important actions.  The creation of user accounts,
     notification about a new update of an application and even
     notifications of the complete execution of a run are some of the
     key processes requiring e-mail.  It is strongly recomended
     configure e-mail to activate these features in your Sci2Web_
     server site.

     If your server definitively does not have the possibility to send
     e-mail set this variable to ``false``.  In this case all the
     messages generated by the website will be stored in the text file
     ``PROJPATH/log/mail.log``. 

#. **Set permissions for critical directories**.  Several directories
   in your website should have reading and writing permission for the
   apache user.  Instead of simply change the permissions to allow an
   unrestricted access to those directories we recommend to change
   their ownership::

     % chown -R APACHE_USER.APACHE_GROUP runs tmp log
     % chown -R APACHE_USER.APACHE_GROUP apps/*/*.html
     % chown -R APACHE_USER.APACHE_GROUP pages/*
     % chown -R APACHE_USER.APACHE_GROUP js/ckfinder/userfiles
     % chown APACHE_USER.APACHE_GROUP lib/sci2web.{conf,db}
     % chmod og-rw lib/sci2web.{conf,db}

   You can use the script ``PROJPATH/doc/install/setperms.sh`` to
   perform this task::

     % bash doc/install/setperms.sh

#. **Create the database**.  Sci2Web_ server site uses systematically
   mysql databases to store information about applications, users,
   runs, etc.  It is important to set up properly the mysql server to
   access and modify those databases.  Before to start you have to
   create a user with the proper permissions to create and modify the
   Sci2Web_ database.  Login into the mysql server as ``root`` and
   execute::

    mysql> create user 'sci2web'@'localhost' identified by 'WebPoweredSAs';

   The information about the user (login and password) should be the
   same as that stored in the master configuration file.

   Now you can create the Sci2Web_ database, their basic tables and
   populate them with basic information.  This is a non-trivial
   process.  The sql commands to properly perform this task are found
   in the text file ``doc/install/sci2web.sql``.  Be sure that the
   information about the database and the user recently created to
   modify it has been properly set up in this file.  Once you have
   verified this information execute in the console::

    $ mysql -u root -p < doc/install/sci2web.sql
 
   If any error arises at this step please verify that the password
   you have set up for the database user is consistent along the files
   ``lib/sci2web.conf``, ``lib/sci2web.db``,
   ``doc/install/sci2web.sql`` and in the creation command you have
   used in mysql.  If something is wrong you can still undo the
   creation of the user using the command::

    mysql> drop user 'sci2web'@'localhost';

   and try to repeat the preceeding procedure.

#. **Compile the sample application**.  The Sci2Web_ server site comes
   with a sample application called **MecuPy**.  This is a Python
   Wraped version of the well known *Mercury* n-body integrator (see
   the `Sci2Web white paper <white-paper.pdf>`_.  Before to start using
   your newly configured Sci2Web_ server site, you must compile the
   application and create the proper entries in the server site
   database.  Perform this using the following commands::

    % cd apps/MercuPy
    % ./install-app.sh

   If any error arises at this point with compilation of the
   application it should be related to the fortran and C++ compiler.
   Please check carefully that the compilers are properly installed
   and configured.  It should be stressed that the sample application
   does not depend on third party software or libraries previously
   installed in the web server besides those enumerated in the
   `Before to start`_ section.

#. **Test the configuration**.  In order to test the configuration of
   the site open the page
   ``http://SERVERURL/PROJBASE/PROJNAME/test.php``.  This php script
   test the access to the database and several key files and
   directories.  If an error is raised at this point check your
   configuration and reload the test script.

#. **Load the server site**.  Once the test script has ran
   successfully check directly the site server by going to
   ``http://SERVERURL/PROJBASE/PROJNAME``.

   If after load the mainpage all the tabs appear blank check the
   permissions of the ``PROJPATH/pages/main`` directory.

#. **Create an user account**.  To start using the tool you have to
   sign up for an account.  If you sign up for an account with the
   e-mail ``test@sci2web.org`` you will be able to edit and perform
   other administrative operations under the example application.  It
   is recommended to create this account as soon as you complete the
   installation to avoid that an anonymous user gain access to
   administrative permissions on the example application.

   After signup for this account and if you have not enabled the
   sending of e-mail, the link to activate it will be found in the log
   file ``log/mail.log``.  Copy the link from this file and paste it
   into your browser.

At this point you have a new Sci2Web_ **server site** and can start
porting your SAs into it and sharing with the scientific community.

Enjoy it!

Security issues
~~~~~~~~~~~~~~~

Security is an important concern when working in the web.  In order to
use Sci2Web_ you should be sure that several aspects of the server
configuration has been set up on one hand to allow the use of the
computational power available in your server and on the other hand to
avoid attacks to your server coming form the Sci2Web_ website.

+ **Apache2 configuration**.  To avoid the access to critical files
  and directories in the website you should configure Apache2 to deny
  the listing of directories where an index file is not present.  To
  perform this allows the overriding of the apache options at the
  ``.htaccess`` files adding to your /etc/apache2/apache2.conf file
  the following section::

	   <Directory "PROJPATH">
	   AllowOverride All
	   </Directory>

  Don't forget to restart the apache2 server (e.g. ``% service apache2
  restart``).

  Among the critical files protected with this measure are the
  ``lib/sci2web.conf`` and ``lib/sci2web.db`` files which contains
  private and critical security information about your site.  If
  apache is properly configured no one will be able to hack your
  configuration file.  Be sure that this works by trying to retrieve
  the content of the configuration file using the browser and the URL
  ``http://server/PROJBASE/PROJNAME/lib/sci2web.conf``.  If the
  content of your configuration file is displayed check again the
  configuration of the apache server.

  The regular users of the server will not be able either to read or
  change those files.  Only the root user will be able to modify this
  behavior.

+ **Allow the use of the batch processing package**.  Sci2Web_ uses by
  default the ``at`` delayed job execution and batch processing
  package in order to submit and run the applications launched from
  the website.  By default the ``at`` command is disabled for the
  APACHEUSER.  Grant permissions to the APACHEUSER to the at queue by
  commenting the username at the ``/etc/at.deny`` file.  

  You can configure here another batch processing packages and job
  scheduler software.  To configure Sci2Web_ to use other submission
  systems please see the `developer guide <developer.html>`_.

+ **Set up bash as the default shell used to executed the jobs at the
  processing package**.  Sci2Web_ uses bash as the default language
  for the submission scripts.  Several schedulers, including ``at``
  uses by default ``dash`` as the default scripting language.
  Normally this is performed by creating a symbolic link to
  ``/bin/dash`` as ``/bin/sh``.  Change this default configuration in
  order to make ``sh`` point out to ``bash``.

-----------------------

Copyright (C) 2011 Jorge I. Zuluaga
