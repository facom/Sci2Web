.. .
   ////////////////////////////////////////////////////////////////////////
   //           _ ___               _					 //
   //          (_)__ \             | |					 //
   //  ___  ___ _   ) |_      _____| |					 //
   // / __|/ __| | / /\ \ /\ / / _ \ '_ \				 //
   // \__ \ (__| |/ /_ \ V  V /  __/ |_) |				 //
   // |___/\___|_|____| \_/\_/ \___|_.__/				 //
   // 		     	    						 //
   // Bringing naturally developed scientific applications to the web	 //
   // Jorge Zuluaga (2011)	   	      		      	  	 //
   ////////////////////////////////////////////////////////////////////////
   .
.. include:: util.txt

=======
Sci2Web
=======
---------------------------------------------------------------
Bringing naturally developed scientific applications to the web
---------------------------------------------------------------

Plaform Installation 
********************

:Author: Jorge Zuluaga
:Version: Revision 1, Wed Nov 30 06:29:15 COT 2011
:Copyright: This document has been placed in the public domain.

Presentation
~~~~~~~~~~~~

This is Sci2Web_.

Install Sci2Web in a new server
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The Sci2Web_ platform will be installed as a website in your server.
You will need to fullfill the following basic prerequisites before
trying to configure and use the platform:

- Apache2 server (debian package, dp:``apache2``)

- PHP and PHP+MySQL modules (dp: ``php5`` , ``php5-mysql`` )

- Perl language

- DBI and DBD-MySQL perl modules (dp: ``libdbi-perl`` , ``libdbd-mysql-perl``)

- Python language

- Matplotlib library (dp: ``python-matplotlib``)

- Delayed job execution and batch processing package, ``at`` (dp:
  ``at``)

For debian (e.g. ubuntu) users use the following command to install
all the packages in your server::

    apt-get install --yes --force-yes apache2 php5 php5-mysql perl python libdbi-perl libdbd-mysql-perl python-matplotlib

To start using the Sci2Web_ platform in your server follow the below
procedure:

.. Important:: Hereafter we will use the follwoing aliases when
   referring to important directories and files:
   
   - **PROJPATH**: directory where the Sci2Web_ site is placed at the
     server (e.g. /var/www/html/Sci2Web).

   - **APACHE_USER** and **APACHE_GROUP**.  User and group of the
     apache2 server.  Typically they are ``www-data`` and ``www-data``.

#. **Edit the master configuration file**.  You can set up the basic
   information about your server in the master configuration file
   ``PROJPATH/lib/sci2web.conf``.  The most important variables in
   this files are:

   + **PROJBASE** and **PROJNAME**: The URL of your project will be
     recognized as: ``http://server/PROJBASE/PROJNAME``.  Configure
     properly these variables to properly configure the links in your
     website.

   + **SCI2WEBSITE**: This is the name of the *local server* where the
     Sci2Web_ platform is installed.  This name will be used in
     different places of the platform to distinguish this instance
     from other ones found around the web.

#. **Set permissions for critical directories**.  Several directories
   in your website should have writing permission for the apache
   user::

   	  $ chown -R APACHE_USER.APACHE_GROUP runs tmp
   	  $ chown -R APACHE_USER.APACHE_GROUP apps/*/*.html
   	  $ chown -R APACHE_USER.APACHE_GROUP pages/*/content/*.html
   	  $ chown -R APACHE_USER.APACHE_GROUP js/ckfinder/userfiles

   You can use the script ``PROJPATH/doc/install/setperms.sh`` to
   change automatically permissions.

#. **Set up the database server**.  Sci2Web_ site uses systematically
   mysql databases to store information about applications, users,
   runs, etc.  In order to use the platform it is important to set up
   properly the mysql server to accept the creation and modification
   of the platform databases.  Before to start you have to create a
   user with the proper permissions to create and modify the Sci2Web_
   database.  Login into the mysql server as ``root`` and execute::

   	 mysql> create user 'sci2web'@'localhost' identified by 'WebPoweredNDSA';
	 mysql> grant all privileges on sci2web.* to 'sci2web'@'localhost';
	 mysql> flush privileges;

   The information about the user (login and password) should be the
   same as that stored in the master configuration file.

#. **Create Sci2Web_ database and populate it with basic
   information**.  You will find the proper sql commands to create and
   populate the Sci2Web_ database at ``doc/install``.  To perform this
   actions just run::

         $ mysql -u root -p < doc/install/sci2web-create.sql
   	 $ mysql -u root -p < doc/install/sci2web-populate.sql
 
#. Once this file has been properly set you can test the access to the
   site using the link:
   ``http://SERVERURL/PROJBASE/PROJNAME/test.php``.  This simple
   script test that key components of the site are loaded properly
   (javascript files, css file, database access, file access, among
   others).  If you still have problems with files please check the
   steps before in order to adjust the permissions.

#. If everything goes OK with the test you can try to go directly to
   the main site ``http://SERVERURL/PROJBASE/PROJNAME``.

#. Create a new user.  It is specially important to create the users
   that will register the first ported applications.

#. Before to start using Sci2Web you have to be sure that:
   
   #. Web user can submit jobs to the queue selected by the platform
      (at by default).  If the queue is at please uncomment the proper
      line at the /etc/at.deny file.

   #. The shell used to executed files with the at queue is bash.  You
      can do this changing the symbolic link /bin/sh to /bin/bash

Security issues
~~~~~~~~~~~~~~~

+ **Apache2 configuration** Allows the overriding of the apache
  options to disable directory listings of your critical directories::

  	   # vi /etc/apache2/apache2.conf

	   <Directory "PROJPATH">
	   AllowOverride All
	   </Directory>

+ **Batch system configuration**.  Configure at.

+ **Configuration of shell script**. Configure bash.

Acronyms and Glossary
~~~~~~~~~~~~~~~~~~~~~

**NDSA**

	Acronym for *Naturally Developed Scientific Application*.
	NDSA are applications developed "spontaneously" by scientist
	as a part of a research effort.  Besides differences in the
	purpose, methods and techniques used to develop this type of
	applications they share very common features.
	
	* Most of them are developed in low level languages
          (C/C++,Fortran)

	* Have a very simple user interface (configuration file,
          non-standard command line input, keyboard input, etc.)

	* They are poorly documented and tested.

	* ...
	
**Ported Application**
	 
	 A *Ported Application* or *Ported NDSA* is an application
	 configured to run with the Sci2Web_ interface.

.. .
   //////////////////////////////////////////////////////////////////////
   //REFERENCES
   //////////////////////////////////////////////////////////////////////
   .

.. _Sci2Web: http://localhost/user/Sci2WebPP
